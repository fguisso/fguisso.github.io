<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>en on Fernando Guisso</title>
    <link>https://guisso.dev/tags/en/</link>
    <description>Recent content in en on Fernando Guisso</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 16 Mar 2022 00:00:46 -0300</lastBuildDate><atom:link href="https://guisso.dev/tags/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic Recon Automation Using Github Actions</title>
      <link>https://guisso.dev/posts/github-actions-recon-en/</link>
      <pubDate>Wed, 16 Mar 2022 00:00:46 -0300</pubDate>
      
      <guid>https://guisso.dev/posts/github-actions-recon-en/</guid>
      <description>Demonstration of how to use Github Actions to automate a Recon</description>
      <content:encoded><![CDATA[<p>Currently, the number of companies using CI (Continuous Integration) and CD (Continuous Deploy) solutions to automate the software lifecycle process (SLD) is growing. The most used tools are Jenkins, Github Actions, Gitlab CI, and so on. These tools bring the ease of automating software testing, code linters, creating releases, and final versions of the software.</p>
<p>In the security world, some companies are also already implementing static security testing (SAST) and compromised software composition testing (SCA). With each addition of code or feature, the software can now be tested before going into production.</p>
<p>The idea of working with security tools in CI/CD goes beyond the fact of automating tasks, but also of bringing the culture of information security to the teams of developers and infrastructure teams, the famous culture of DevSecOps. Very important at the moment we go through where development teams are scaling absurdly and we don&rsquo;t have security experts to accompany these teams.</p>
<p>Link for the projects repository: <a href="https://github.com/fguisso/ga-recon">https://github.com/fguisso/ga-recon</a></p>
<h2 id="use-cases-beyond-static-tests-sast-and-sca">Use cases beyond static tests (SAST and SCA)</h2>
<p>The simplest use case we can address is dynamic security tests scheduled to take place periodically, taking into account that the application is already in production.</p>
<p>Other interesting cases would be the possibility of Red Team teams, taking advantage of the event notifications of a pipeline, to launch automated tests as soon as the development of a new feature begins. I will address this topic in more depth in another article.</p>
<p>What we will explore more in this article is the recognition of applications already in production, where we will point a domain to our CI that will periodically run some recognition tools, which can be used later by security teams for future security analyses.</p>
<h2 id="github-and-github-actions">Github and Github Actions</h2>
<p>We are going to use Github to version and store our project, so go to github.com and create a new repository. Now let&rsquo;s create and edit some files, if you don&rsquo;t know how Github works, you can use the graphical interface.
Github Actions is already an enabled Github service, just put the pipeline configuration files in a folder called <code>.github/workflows</code> and all interactions and logs of this pipeline will be visible in the actions tab.</p>
<p>To facilitate the creation of pipelines, Github Actions offers Actions, which are sets of configurations and installations ready for you to use in your pipeline, without you having to worry about it. Some official Actions are available on the Github Marketplace, however, you can directly use any Action that is a repository on Github.</p>
<p>Learn more about Actions <a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions">here</a> and the <a href="https://github.com/marketplace?type=actions">link</a> to the marketplace.</p>
<p><img loading="lazy" src="https://user-images.githubusercontent.com/5755568/158624544-226a1e59-fef5-441e-beca-73b66c30dd5d.png" alt="image"  />

<em>Examples of separate workflow files.</em></p>
<p><img loading="lazy" src="https://user-images.githubusercontent.com/5755568/158624831-2aebfc25-a58b-49b2-91cb-33d17f0f77c2.png" alt="image"  />

<em>Github Actions resource tab with configured workflows.</em></p>
<h3 id="amass-action">Amass Action</h3>
<p>Amass according to its official documentation:</p>
<p>The OWASP Amass project performs attack surface network mapping and external asset discovery using open-source intelligence gathering and active reconnaissance techniques.</p>
<p>Amass is a very powerful tool that provides us with functions for the recognition and also for the management of the collected information. In our case, we are going to use the Amass Action just to enumerate a domain and bring the result in a txt file for later use.</p>
<p>In your repository create a file called <code>amass.yml</code> inside the <code>.github/workflows</code> folder and add these settings and let&rsquo;s analyze what we are doing line by line:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">ðŸ”Ž Recon</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">workflow_dispatch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">recon</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/setup-go@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">go-version</span><span class="p">:</span><span class="w"> </span><span class="m">1.17</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Amass - Enumeration</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">fguisso/amass-action@main</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">domains</span><span class="p">:</span><span class="w"> </span><span class="l">owasp.org</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">brute</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">output</span><span class="p">:</span><span class="w"> </span><span class="l">hosts.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">GitHub Workflow artifacts</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/upload-artifact@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">hosts.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">hosts.txt</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Note: .yml/.yaml files are heavily indented, so the tabs and spaces within the file must be correct to avoid errors. You can use Github itself to validate your file or use a linter of YAML files.</p>
<p>On the first line <code>name:</code> â€‹â€‹is just an identifier for your pipeline to be easily found within the Actions tab of Github.</p>
<p>After <code>on:</code> is where we can automate so that the workflow starts according to some programmed event, which can be triggered by one or more events, at the moment we choose <code>workflow_dispatch:</code> so that it is available in the Actions dashboard and we can activate any time. Towards the end, we will see how to trigger this workflow scheduled to run once a week, but you can also trigger it using Git events like trigger whenever there is a Pull Request in the development branch, trigger only when a Merge from the main branch happens.</p>
<p><code>jobs:</code> is where we can separate Actions to run in parallel, as we are using the Free version of Github Actions, we will try to always keep just one job running everything we need. <a href="https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow">Job documentation link</a>.</p>
<p>The first <code>steps</code> I will summarize as just settings to compile and run the Amass tool which is developed in Golang. Usually, when you are going to use an Action, the necessary settings will be in the documentation, don&rsquo;t worry.</p>
<p>After the initial <code>steps</code>, let&rsquo;s call the Amass Action using the Action&rsquo;s Github address, <code>uses: fguisso/amass-action@main</code> and pass in some configuration inputs:</p>
<p><code>domains:</code> I will use the domain of owasp.org to be our target, you can use the domain of your application or also pass more than one domain separated by commas.</p>
<p>Let&rsquo;s enable <code>brute:</code> to brute force the searches found and finally pass the name of the final file <code>output: hosts.txt</code>, where we will store the results.</p>
<p>Well, so far we&rsquo;ve done the whole process of using a tool through Github Actions, but due to how an automated pipeline works, every <code>job</code> that we run, will upload a new machine and at the end of the process it is turned off and deleted, no holding no information or files created. So, we need to get our final <code>hosts.txt</code> file and save it somewhere for later reference. We have several options such as uploading the file to another machine, saving the result in the Git repository, using Github Actions we can also create and interact with Issues or Pull Requests and the most used for CI/CD services is to create an artifact of your <code>job</code>, which is what we are going to do.</p>
<p>In the last <code>step</code> we start another Action that serves to upload files for the artifacts of your workflow, just passing the name of the current file and the final name that will be available within the artifacts of this workflow.</p>
<p>Now let&rsquo;s run our workflow manually, just go to the Actions tab of your repository, choose the Amass Enum workflow, and click on the Run Workflow button.
<img loading="lazy" src="https://user-images.githubusercontent.com/5755568/158627084-09f2ab97-6d95-439e-9241-6557a5e72aef.png" alt="image"  />
</p>
<p>Right after you can see your workflow running and if you want to follow the <code>steps</code> and logs, just click on your <code>job</code> <code>recon</code>.</p>
<p>Once the workflow finishes all the <code>steps</code> you will be able to see the results and your artifact will be available for download:</p>
<p><img loading="lazy" src="https://user-images.githubusercontent.com/5755568/158697555-07a8c02a-8132-45e8-ab55-4a3d790cf092.png" alt="image"  />
</p>
<h3 id="naabu-action">Naabu Action</h3>
<p>Naabu is a port scan tool where it will look for the open and active ports of a given host. The creators of the project maintain an official version of a Github Actions to run Naabu, so let&rsquo;s follow their documentation to follow our recon workflow.</p>
<p>Let&rsquo;s add the Naabu Action to port recognition from this list of domains that Amass has given us. As one depends on the result of the other, let&rsquo;s put it in the sequence of <code>steps</code> so that it will be executed right away if there is no error in the execution of the previous step.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Naabu - Port Scannner</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">projectdiscovery/naabu-action@main</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">list</span><span class="p">:</span><span class="w"> </span><span class="l">hosts.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">output</span><span class="p">:</span><span class="w"> </span><span class="l">urls.txt</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>As we are working with just one <code>job</code>, Github Actions goes up a machine with some configurations and at the end of the process, this machine will be turned off and removed, with everything that was generated inside it. Since we haven&rsquo;t finished our <code>job</code> yet, so the <code>hosts.txt</code> file is still available. In case you want to keep these results, we need to do as before and pass the result files to the artifacts of this <code>job</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">GitHub Workflow artifacts</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/upload-artifact@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">hosts.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">            hosts.txt
</span></span></span><span class="line"><span class="cl"><span class="sd">            urls.txt</span><span class="w">            
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>For simplicity, let&rsquo;s pass the files straight to just one artifact, so Github will create a final .zip file for you with all these files inside.</p>
<h3 id="nuclei-action">Nuclei Action</h3>
<p>Nuclei is a template-based vulnerability scanning tool, with the help of the community today there are over 1000 ready-to-use templates that will test your application for known vulnerabilities. Like Naabu, we also have an official Nuclei Action that we will use: <a href="https://github.com/marketplace/actions/nuclei-dast-scan">https://github.com/marketplace/actions/nuclei-dast-scan</a></p>
<p><strong>Attention!</strong> Due to a bug found in the ProjectDiscovery Actions, I will use a fork of my own where I fixed the problem, as soon as the correction is included in the official project, I will update the article and change <code>fguisso/nuclei- action@inputs</code> by <code>projectdiscovery/nuclei-action@main</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Nuclei - DAST Scan</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">fguisso/nuclei-action@inputs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">urls</span><span class="p">:</span><span class="w"> </span><span class="l">urls.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">output</span><span class="p">:</span><span class="w"> </span><span class="l">nuclei.txt</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>As a previous result, now we have the hosts and their active ports, let&rsquo;s move to the cores to check if all these services are found, we find any vulnerability.</p>
<h3 id="running-your-workflow-manually">Running your workflow manually</h3>
<p>With everything configured, we can now run our workflow manually. Just access the Actions tab in your repository, select your workflow and click on <code>Run workflow</code>.</p>
<p>You can follow the execution of your workflow or just wait until the icon turns green, which means that all the <code>steps</code> happened correctly and you can probably download your results in the artifacts field.</p>
<p>Whenever you want, you can update the domain you want to scan and you can also add more than one domain using just commas to separate them. Ex: <code>owasp.org,github.com</code>.</p>
<h3 id="events-to-dispatch">Events to dispatch</h3>
<p>As mentioned before, workflows can respond to specific events to be able to run, and here we are just going to create a schedule so that we can run our workflow once a week.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">schedule</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">cron</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0 0 * * 0&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">workflow_dispatch</span><span class="p">:</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>We can schedule using cron schedule expressions, so our workflow will run once a week, every Sunday at 00:00.</p>
<p>Do not remove the <code>workflow_dispatch</code> line unless you are already certain that you will no longer use the manual trigger button.</p>
<p>Here is a list of other events that you can use to run your workflows automatically. Read more about it in the Github Actions documentation <a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on">https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on</a>.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Hacktoberfest Owasp English</title>
      <link>https://guisso.dev/posts/hacktoberfest-owasp-en/</link>
      <pubDate>Sat, 05 Oct 2019 11:26:27 -0300</pubDate>
      
      <guid>https://guisso.dev/posts/hacktoberfest-owasp-en/</guid>
      <description>October is here and everyone is running after their 4 PR&amp;rsquo;s to win a digitalocean t-shirt!
For those who don&amp;rsquo;t know, in October there is Hacktoberfest, an online and global event where people are awarded for contributing open source code. More information you can see on the official website of the event.
OWASP and projects! The information security crowd knows how important the tools that assist in the process of code and vulnerability analysis are, and now is the time to contribute these tools and materials.</description>
      <content:encoded><![CDATA[<p>October is here and everyone is running after their 4 PR&rsquo;s to win a digitalocean t-shirt!</p>
<p>For those who don&rsquo;t know, in October there is Hacktoberfest, an online and global event where people are awarded for contributing open source code. More information you can see on the official website of the <a href="https://hacktoberfest.digitalocean.com">event</a>.</p>
<h1 id="owasp-and-projects">OWASP and projects!</h1>
<p>The information security crowd knows how important the tools that assist in the process of code and vulnerability analysis are, and now is the time to contribute these tools and materials.</p>
<p>Here&rsquo;s a list of the most interesting OWASP projects that can help you with your work and also accept that you contribute code or documentation:</p>
<h2 id="owasp-top-10">OWASP Top 10</h2>
<p>It is a web application security awareness document. It meets the most critical web application security risks. In this list you can find some vulnerabilities, such as checking if your application is not vulnerable to them and also some countermeasures. <a href="https://github.com/OWASP/Top10/issues">Github</a></p>
<h2 id="owasp-zed-attack-proxyzap">OWASP Zed Attack Proxy(ZAP)</h2>
<p>ZAP is a popular vulnerability testing tool among security professionals and pentesters. It can help you in the process of finding and addressing vulnerabilities in your web applications. <a href="https://github.com/zaproxy/zaproxy/">Github</a> <a href="https://github.com/zaproxy/zap-extensions/">ZAP Extensions</a></p>
<h2 id="owasp-juice-shop-project">OWASP Juice Shop Project</h2>
<p>As they like to say, it&rsquo;s probably the most modern and sophisticated insecure web application! Yes, that&rsquo;s right, an insecure application for you to test and learn about the Top 10 vulnerabilities, with a complete learning support, book and tools to make learning easier. <a href="https://github.com/bkimminich/juice-shop">Github</a></p>
<h2 id="owasp-defectdojo">OWASP DefectDojo</h2>
<p>A great vulnerability management tool, it streamlines the testing process with modeling, reporting, and metrics tools. Stop spending a fortune on other vulnerability managers and start contributing the code of this powerful tool. <a href="https://github.com/DefectDojo/django-DefectDojo/">Github</a></p>
<h2 id="owasp-amass">OWASP Amass</h2>
<p>DNS enumeration and infrastructure mapping with techniques for obtaining web-scraped subdomains, APIs, and querying public databases. All that power in one simple tool is worth putting in your utility belt-bat. <a href="https://github.com/OWASP/Amass">Github</a></p>
<h2 id="owasp-d4n155">OWASP D4N155</h2>
<p>OSINT In a smart way, this project creates wordlists based on the content of your target along with Google Dorks techniques. In the future some data intelligence features will be added and you can be part of the development of this tool. <a href="https://github.com/OWASP/D4N155">Github</a></p>
<p>These are some of the many projects, so if you want to know all the projects, you can check out the <a href="https://www.owasp.org/index.php/Category:OWASP_Project#tab=Project_Inventory">project repository</a>. If you would like to participate in the projects, log into the project github or contact your Project Leader.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Escrevendo artigos e palestras</title>
      <link>https://guisso.dev/posts/escrevendo-artigos-e-palestras/</link>
      <pubDate>Fri, 22 Feb 2019 20:42:45 -0300</pubDate>
      
      <guid>https://guisso.dev/posts/escrevendo-artigos-e-palestras/</guid>
      <description>Algumas dicas de como montar uma boa palestra e de quebra jÃ¡ escrever um artigo</description>
      <content:encoded><![CDATA[<h1 id="escrevendo-artigos-e-palestras">Escrevendo artigos e palestras</h1>
<p>Veja como comeÃ§ar a compartilhar conhecimento de umas vez por todas.</p>
<p>Se vocÃª chegou atÃ© aqui, o seu desafio Ã© comeÃ§ar um artigo ou palestra logo apÃ³s terminar a leitura, nÃ£o me deixe desapontado.</p>
<p>Escrever artigos e palestras Ã© uma coisa magnifica pois Ã© um dos meios de compartilhar e descentralizar o conhecimento, o que Ã© um dos mantras da cultura hacker que eu gosto muito de seguir.</p>
<p>A algum tempo participo e ajudo a organizar eventos de tecnologia, atualmente sou membro da equipe de conteÃºdos da Campus Party Brasil e responsÃ¡vel pelas comunidades do evento. Sendo assim eu busquei um pouco sobre como palestrar melhor e aprendi algumas coisas por ai. Inclusive fiz um curso bem legal que foi muito bom nÃ£o sÃ³ para palestrar, mas tambÃ©m para o meu auto conhecimento, recomendo muito. <a href="https://leonardocalixto.com.br/">https://leonardocalixto.com.br/</a></p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/2094/0*foIwlR7-piwD2uWs" alt="Palestra sobre phishing no LAMEC 2018"  />
<em>Palestra sobre phishing no LAMEC 2018</em></p>
<p>LÃ³gico que palestrar e escrever um artigo sÃ£o coisas diferentes, mas na minha mente uma boa palestra comeÃ§a com um bom planejamento, que pode ser um artigo. Imagina se toda palestra jÃ¡ tivesse seu artigo bunitinho, o mundo seria melhor.</p>
<h3 id="storytelling">Storytelling</h3>
<p>Aqui vocÃª nÃ£o vai encontrar muito sobre este assunto, entÃ£o vou deixar alguns links para vocÃª se aprofundar, mas em resumo, um bom artigo ou palestra nada mais Ã© do que uma boa historia contada.</p>
<p>E uma historia precisa de um comeÃ§o, meio e fim. Por exemplo a chapeuzinho vermelho:</p>
<p>ComeÃ§a com uma garota, como ela Ã©, o que ela tem e oque ela precisa de fazer.</p>
<p>No meio, se desenvolve o que ela fez com tudo o que foi apresentado, a historia chega a dar um frio na barriga, uma curiosidade, atÃ© chegar no climax da situaÃ§Ã£o.</p>
<p>Por fim tudo que foi desenvolvido no meio, chega em uma soluÃ§Ã£o, tudo se encaixa e termina bem.</p>
<p>Assim deve ser o seu artigo ou palestra, vocÃª escolhe um tema, pequeno pois nÃ£o quer escrever um livro e nem dar uma palestra-filme, elucida os pontos para iniciar o desenvolvimento da historia e atraia a curiosidade do leitor, depois explica cada ponto trazido no inicio, e ao fim, chega em uma conclusÃ£o.</p>
<h3 id="dicas-e-links">Dicas e links</h3>
<p>Pegue artigos e palestra com o tema parecido com seu e analise como foi construÃ­do.</p>
<p>Fale de coisas que vocÃª tenha propriedade, isso nÃ£o quer dizer que se vocÃª nÃ£o entende um assunto 100%, nÃ£o pode falar sobre ele. Por exemplo gosto muito palestras, mas nÃ£o sou formado em comunicaÃ§Ã£o para estar falando aqui, acontece que mesmo assim estou compartilhando experiencias que deram certo comigo e sÃ£o legais para quem esta comeÃ§ando e nÃ£o vou alem do que eu nÃ£o sei.</p>
<p>Medo, vai com medo mesmo, feedbacks sÃ£o importantes, se preocupe se vocÃª sÃ³ tiver recebendo feedbacks bons, talvez as pessoas nÃ£o querem perder tempo discutindo com vocÃª. Se for feedback ruim, melhor ainda que vocÃª vai ter coisas para melhor e aprender coisas novas.</p>
<p>Em palestras as coisas vÃ£o muito alem de uma linha de raciocÃ­nio do storytelling, existe o tom de voz, a postura do palestrante, improviso, humor e por ai vai, tÃ©cnicas de palco em geral, nada muito difÃ­cil que vocÃª nÃ£o possa aprender na internet.</p>
<p>Manual ilustrado para palestrantes dos TEDx &lt;<a href="http://storage.ted.com/tedx/manuals/IllustratedTEDxSpeakerGuide.pdf">http://storage.ted.com/tedx/manuals/IllustratedTEDxSpeakerGuide.pdf</a>&gt;</p>
<p>Palestra de humor de como um TED fica tÃ£o bom, Ã© engraÃ§ado mas da para tirar alguns insights de como montar uma palestra chamativa &lt;<a href="https://www.youtube.com/watch?v=8S0FDjFBj8o">https://www.youtube.com/watch?v=8S0FDjFBj8o</a>&gt;</p>
<p>Outras referencias sobre Talks about talks &lt;<a href="https://www.ted.com/playlists/574/how_to_make_a_great_presentation">https://www.ted.com/playlists/574/how_to_make_a_great_presentation</a>&gt;</p>
<p>Artigo muito bom de como comeÃ§ar com artigos &lt;<a href="https://medium.com/trainingcenter/o-que-eu-devo-saber-para-escrever-artigos-1d6a6902d6bb">https://medium.com/trainingcenter/o-que-eu-devo-saber-para-escrever-artigos-1d6a6902d6bb</a>&gt;</p>
<p>Dicas marotas para artigos tÃ©cnicos &lt;<a href="https://medium.com/@rosariopfernandes/writer-4195046ab0c4">https://medium.com/@rosariopfernandes/writer-4195046ab0c4</a>&gt;</p>
<p>O famoso design thinking para palestras &lt;<a href="https://medium.com/uxconfbr/como-criar-uma-apresenta%C3%A7%C3%A3o-inteira-antes-mesmo-de-abrir-o-powerpoint-fbdbebbbb3a6">https://medium.com/uxconfbr/como-criar-uma-apresenta%C3%A7%C3%A3o-inteira-antes-mesmo-de-abrir-o-powerpoint-fbdbebbbb3a6</a>&gt;</p>
<p>10 dicas Ã³timas &lt;<a href="https://medium.com/uxconfbr/guia-para-palestrar-em-eventos-da-sua-comunidade-profissional-parte-i-4c2dc28553dd">https://medium.com/uxconfbr/guia-para-palestrar-em-eventos-da-sua-comunidade-profissional-parte-i-4c2dc28553dd</a>&gt;</p>
<p>Palestras acessÃ­veis <em>-</em> &lt;<a href="https://medium.com/uxconfbr/guia-para-eventos-acessiveis-como-fazer-apresentacoes-parte-i-137317610631">https://medium.com/uxconfbr/guia-para-eventos-acessiveis-como-fazer-apresentacoes-parte-i-137317610631</a>&gt;</p>
<p>Passei de curioso para influencer de artigos, como se tornar Zika da balada no Medium &lt;<a href="https://valternascimento.com.br/como-escrever-textos-de-sucesso-no-medium-5cba69be8a1e">https://valternascimento.com.br/como-escrever-textos-de-sucesso-no-medium-5cba69be8a1e</a>&gt;</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
